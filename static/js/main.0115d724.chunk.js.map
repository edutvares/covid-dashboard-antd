{"version":3,"sources":["pages/Map/index.js","pages/Dashboard/index.js","App.js","reportWebVitals.js","index.js"],"names":["DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","Map","data","MapContainer","className","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","prototype","options","columns","title","dataIndex","key","render","TotalConfirmed","color","TotalRecovered","TotalDeaths","Dashboard","gutter","size","span","value","loading","global","valueStyle","prefix","MehOutlined","SmileOutlined","FrownOutlined","style","marginTop","dataSource","Header","Layout","Content","Footer","Sider","App","useState","collapsed","setCollapsed","setData","useEffect","dataFetch","a","fetch","method","redirect","then","response","json","Global","Countries","sort","b","catch","error","console","log","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","Item","PieChartOutlined","to","GlobalOutlined","padding","align","Title","level","margin","path","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","locale","ptBR","document","getElementById"],"mappings":"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","file":"static/js/main.0115d724.chunk.js","sourcesContent":["import {useEffect}from \"react\"\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport \"./style.css\";\nimport 'leaflet/dist/leaflet.css';\n\nimport { useLocation } from \"react-router-dom\"\n\nimport L from 'leaflet';\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nconst DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nexport default function Map({ data }) {\n\n  const position = [-10.9095, -37.0748]\n\n  return (\n      <MapContainer className=\"map-container\" center={position} zoom={1.5} scrollWheelZoom={true}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {/*data.dataSource.map((country, key) => {\n          return (\n            <Marker position={[51.505, -0.09]} key={key}>\n              <Popup>\n                {country.Country}\n              </Popup>\n            </Marker>\n          )\n        })*/}\n        \n        \n      </MapContainer>\n  )\n}\n","import { Card, Col, Row, Statistic, Table, Tag } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport {MehOutlined, SmileOutlined, FrownOutlined} from \"@ant-design/icons\"\nimport { useLocation } from \"react-router-dom\"\n\nconst columns = [\n  {\n    title: \"Country\",\n    dataIndex: \"Country\",\n    key: \"Country\",\n  },\n  {\n    title: \"Total Confirmed\",\n    dataIndex: \"TotalConfirmed\",\n    key: \"TotalConfirmed\",\n    render: (TotalConfirmed) => (\n      <Tag color=\"gold\" key={TotalConfirmed}>\n        {TotalConfirmed}\n      </Tag>\n    ),\n  },\n  {\n    title: \"Total Recovered\",\n    dataIndex: \"TotalRecovered\",\n    key: \"TotalRecovered\",\n    render: (TotalRecovered) => (\n      <Tag color=\"green\" key={TotalRecovered}>\n        {TotalRecovered}\n      </Tag>\n    ),\n  },\n  {\n    title: \"Total Deaths\",\n    dataIndex: \"TotalDeaths\",\n    key: \"TotalDeaths\",\n    render: (TotalDeaths) => (\n      <Tag color=\"red\" key={TotalDeaths}>\n        {TotalDeaths}\n      </Tag>\n    ),\n  },\n];\n\nexport default function Dashboard({data}) {\n  return (\n    <>\n      <Row gutter={16} size=\"16\">\n        <Col span={8}>\n          <Card>\n            <Statistic\n              title=\"Cases\"\n              value={!data.loading ? data.global.TotalConfirmed : \"--\"}\n              valueStyle={{ color: \"gold\" }}\n              prefix={<MehOutlined />}\n            />\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card>\n            <Statistic\n              title=\"Recovered\"\n              value={!data.loading ? data.global.TotalRecovered : \"--\"}\n              valueStyle={{ color: \"#3f8600\" }}\n              prefix={<SmileOutlined />}\n            />\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card>\n            <Statistic\n              title=\"Deaths\"\n              value={!data.loading ? data.global.TotalDeaths : \"--\"}\n              valueStyle={{ color: \"#cf1322\" }}\n              prefix={<FrownOutlined />}\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Table\n        style={{ marginTop: \"16px\" }}\n        columns={columns}\n        dataSource={!data.loading && data.dataSource}\n        loading={data.loading}\n      />\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route, Link, useLocation } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport { Layout, Menu, Space, Typography } from \"antd\";\nimport { PieChartOutlined, GlobalOutlined } from \"@ant-design/icons\";\n\nimport Map from \"./pages/Map\";\nimport Dashboard from \"./pages/Dashboard\";\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(false);\n\n  const [data, setData] = useState({\n    dataSource: {},\n    global: {},\n    loading: true,\n  });\n\n  useEffect(() => {\n    const dataFetch = async () => {\n      var requestOptions = {\n        method: \"GET\",\n        redirect: \"follow\",\n      };\n\n      fetch(\"https://api.covid19api.com/summary\", requestOptions)\n        .then((response) => response.json())\n        .then(({ Global, Countries }) => {\n          setData({ global: Global, dataSource: Countries.sort((a,b) => b.TotalDeaths - a.TotalDeaths), loading: false });\n        })\n        .catch((error) => dataFetch());\n    };\n    dataFetch();\n    console.log(data.global);\n  }, []);\n\n  return (\n    <Router>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Sider collapsible collapsed={collapsed} onCollapse={setCollapsed}>\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" defaultSelectedKeys={[\"/\"]} mode=\"inline\">\n            <Menu.Item key=\"/\" icon={<PieChartOutlined />}>\n              <Link to=\"/\">Dashboard</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/map\" icon={<GlobalOutlined />}>\n              <Link to=\"/map\">Map</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header\n            className=\"site-layout-background\"\n            style={{ padding: \"0 40px\" }}\n          >\n            <Space align=\"center\">\n              <Typography.Title level={4}>Covid-19 Dashboard</Typography.Title>\n            </Space>\n          </Header>\n          <Content style={{ margin: \"16px\" }}>\n            <div\n              className=\"site-layout-background\"\n              style={{ padding: 24, minHeight: 360 }}\n            >\n              <Switch>\n                <Route path=\"/map\">\n                  <Map data={data}/>\n                </Route>\n                <Route path=\"/\">\n                  <Dashboard data={data}/>\n                </Route>\n              </Switch>\n            </div>\n          </Content>\n          <Footer style={{ textAlign: \"center\" }}>\n            Ant Design ©2018 Created by Ant UED\n          </Footer>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { ConfigProvider } from \"antd\";\nimport ptBR from \"antd/lib/locale/pt_BR\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ConfigProvider locale={ptBR}>\n      <App />\n    </ConfigProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}